public-f net.minecraft.data.models.BlockModelGenerators blockStateOutput
public-f net.minecraft.data.models.BlockModelGenerators modelOutput
public-f net.minecraft.data.models.BlockModelGenerators texturedModels
public-f net.minecraft.data.models.BlockModelGenerators SHAPE_CONSUMERS
public net.minecraft.data.models.BlockModelGenerators skipAutoItemBlock(Lnet/minecraft/world/level/block/Block;)V
public net.minecraft.data.models.BlockModelGenerators delegateItemModel(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V
public net.minecraft.data.models.BlockModelGenerators createHorizontalFacingDispatch()Lnet/minecraft/data/models/blockstates/PropertyDispatch;
public net.minecraft.data.models.BlockModelGenerators createFacingDispatch()Lnet/minecraft/data/models/blockstates/PropertyDispatch;
public net.minecraft.data.models.BlockModelGenerators family(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider;
public net.minecraft.data.models.BlockModelGenerators createSlab(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createStairs(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createWall(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createRotatedPillarWithHorizontalVariant(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createRotatedPillarWithHorizontalVariant(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V
public net.minecraft.data.models.BlockModelGenerators createSimpleFlatItemModel(Lnet/minecraft/world/level/block/Block;)V
public net.minecraft.data.models.BlockModelGenerators createSimpleFlatItemModel(Lnet/minecraft/world/item/Item;)V
public net.minecraft.data.models.BlockModelGenerators createSimpleBlock(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator;
public net.minecraft.data.models.BlockModelGenerators createOrientableTrapdoor(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createTrapdoor(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createFence(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators createFenceGate(Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/data/models/blockstates/BlockStateGenerator;
public net.minecraft.data.models.BlockModelGenerators woodProvider(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider;
public net.minecraft.data.models.BlockModelGenerators applyRotation(Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant;

public net.minecraft.data.models.BlockModelGenerators$WoodProvider
public net.minecraft.data.models.BlockModelGenerators$WoodProvider logMapping

public net.minecraft.data.models.BlockModelGenerators$BlockFamilyProvider
public net.minecraft.data.models.BlockModelGenerators$BlockFamilyProvider fullBlock
public net.minecraft.data.models.BlockModelGenerators$BlockFamilyProvider fullBlockVariant(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider;

public net.minecraft.data.models.model.TextureSlot create(Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot;
public net.minecraft.data.models.model.TextureSlot create(Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot;

public net.minecraft.data.models.model.TexturedModel <init>(Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V # <init>

public net.minecraft.world.level.block.NyliumBlock canBeNylium(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z
public net.minecraft.world.level.block.SpreadingSnowyDirtBlock canBeGrass(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z
public net.minecraft.world.level.block.SnowyDirtBlock isSnowySetting(Lnet/minecraft/world/level/block/state/BlockState;)Z

public net.minecraft.world.level.block.state.properties.IntegerProperty min
public net.minecraft.world.level.block.state.properties.IntegerProperty max
